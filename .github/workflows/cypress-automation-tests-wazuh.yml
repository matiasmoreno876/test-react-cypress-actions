# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress Automation Tests

on:
  push:
    branches:
      - 'disable'
  pull_request:
    branches:
      - 'master'
  
jobs:
  setup-wazuh-kibana-app:
    name: Run setup environment wazuh kibana app
    #runs-on: self-hosted
    runs-on: ubuntu-18.04
    #container: cypress/browsers:node12.18.0-chrome83-ff77
    steps:
     - name: Step 01 - Set up environment variables
       run: |
        echo Base Branch: ${{ github.base_ref }}
        echo Head Branch: ${{ github.head_ref }}
        
        echo "WAZUH_BASE_BRANCH=4.2-7.10" >> $GITHUB_ENV
        echo "WAZUH_HEAD_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
        
        ${{ github.event.pull_request.body }} > pull_request.body.txt
        
        cat pull_request.body.txt
        
        WAZUH_MANAGER_IMAGE=$(grep 'WAZUH_MANAGER_IMAGE=*' ./pull_request.body.txt | cut -d '=' -f2)
        WAZUH_AGENT_IMAGE=$(grep 'WAZUH_AGENT_IMAGE=*' ./pull_request.body.txt | cut -d '=' -f2)
        WAZUH_VERSION=$(grep 'WAZUH_VERSION=*' ./pull_request.body.txt | cut -d '=' -f2)
        ELASTIC_VERSION=$(grep 'ELASTIC_VERSION=*' ./pull_request.body.txt | cut -d '=' -f2)
        
        echo "PATH_TEMPLATE_BASIC_CLUSTER_AGENT=$GITHUB_WORKSPACE/wazuh-app-environments/templates_elastic_prod/es_basic-wz_cluster-agent/" >> $GITHUB_ENV
     - name: Step 02 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: frankeros/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.TOKEN  }}
     - name: Step 03 - Configuring templates docker environment
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/
        mkdir packages
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        sed -i -e "s/WAZUH_MANAGER_IMAGE=.*/WAZUH_MANAGER_IMAGE=$WAZUH_MANAGER_IMAGE/g" ./.env
        sed -i -e "s/WAZUH_AGENT_IMAGE=.*/WAZUH_AGENT_IMAGE=$WAZUH_AGENT_IMAGE/g" ./.env
        sed -i -e "s/WAZUH_VERSION=.*/WAZUH_VERSION=$WAZUH_VERSION/g" ./.env
        sed -i -e "s/ELASTIC_VERSION=.*/ELASTIC_VERSION=$ELASTIC_VERSION/g" ./.env
        cat .env
     - name: Step 04 - Starting containers
       run: |
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        docker-compose up -d
     - name: Step 05 - Download Project wazuh-packages 
       uses: actions/checkout@v2
       with:
        repository: wazuh/wazuh-packages
        ref: '4.2'
        path: wazuh-packages
     - name: Step 06 - Building package
       run: |
        cd $GITHUB_WORKSPACE/wazuh-packages/wazuhapp
        echo fixing command...
        sed -i -e 's/'\|' cut -d \"\/\" \-f2//g' ./generate_wazuh_app.sh 
        echo run command...
        ./generate_wazuh_app.sh -b ${{ env.WAZUH_HEAD_BRANCH }} -s $GITHUB_WORKSPACE/wazuh-app-environments/packages -r 1
     - name: Step 07 - Installing package
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/packages/
        PACKAGE_NAME=`ls *.zip`
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        docker exec es_basic-wz_cluster-agent_kibana_1 bin/kibana-plugin install file:///packages/$PACKAGE_NAME
        docker-compose restart kibana
        echo CONTINUES AFTER 20 SECONDS ...
        sleep 20s
     - name: Step 08 - Configuring ip container into wazuh.yml
       run: |
        IP_CONTAINER_MANAGER=$(docker exec es_basic-wz_cluster-agent_wazuh-manager-master_1 hostname -i)
        docker exec es_basic-wz_cluster-agent_kibana_1 cat ./data/wazuh/config/wazuh.yml
        docker exec es_basic-wz_cluster-agent_kibana_1 sed -i -e "s/url: https:\/\/localhost/url: https:\/\/$IP_CONTAINER_MANAGER/g" ./data/wazuh/config/wazuh.yml
        docker exec es_basic-wz_cluster-agent_kibana_1 cat ./data/wazuh/config/wazuh.yml
     - name: Step 09 - Download Project wazuh-qa 
       uses: actions/checkout@v2
       with:
        repository: wazuh/wazuh-qa
        ref: 'feature/frontend'
        path: wazuh-qa
     - name: Step 10 - Install Cypress Project Dependencies
       run: |
        cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
        npm install
        npm run cy:install
     - name: Step 11 - Run Cypress tests
       run: |
         cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
         npm run cypress:run-headless
       continue-on-error: true
     - name: Step 12 - Copy test execution videos and screenshots
       run: |
          mkdir -p public/videos
          mkdir -p public/screenshots
          cp -r $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/cypress/report/video $GITHUB_WORKSPACE/public/videos
          cp -r $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/cypress/report/screenshots $GITHUB_WORKSPACE/public/screenshots
     - name: Step 13 - Merge test reports
       run: |
        cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
        npm run merge
     - name: Step 14 - Generate HTML report
       run: |
        cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
        npm run generate_mochawesome_report
     - name: Step 15 - Deploy report page to GitHub Page
       uses: peaceiris/actions-gh-pages@v3
       with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
